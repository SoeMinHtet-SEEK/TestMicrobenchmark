name: Performance Benchmarks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run Benchmarks
        id: run-benchmarks
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          target: default
          arch: x86_64
          profile: Nexus 6
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot -no-metrics
          disable-animations: true
          disable-spellchecker: true
          emulator-boot-timeout: 600
          script: ./gradlew :benchmark:connectedReleaseAndroidTest --continue --stacktrace

      - name: Setup Python
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Grafana Alloy
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        run: |
          sudo mkdir -p /etc/apt/keyrings/
          wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null
          echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | sudo tee /etc/apt/sources.list.d/grafana.list
          sudo apt-get update
          sudo apt-get install -y alloy
          alloy --version

      - name: Push to Grafana Cloud
        if: success() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        env:
          GRAFANA_URL: ${{ secrets.GRAFANA_PROMETHEUS_URL }}
          GRAFANA_USER: ${{ secrets.GRAFANA_PROMETHEUS_USER }}
          GRAFANA_TOKEN: ${{ secrets.GRAFANA_PROMETHEUS_TOKEN }}
        run: |
          BENCHMARK_OUTPUT_DIR="benchmark/build/outputs/connected_android_test_additional_output"
          
          if [ ! -d "$BENCHMARK_OUTPUT_DIR" ]; then
            echo "Benchmark output directory not found: $BENCHMARK_OUTPUT_DIR"
            exit 1
          fi
          
          if [ -z "$GRAFANA_URL" ] || [ -z "$GRAFANA_USER" ] || [ -z "$GRAFANA_TOKEN" ]; then
            echo "Grafana secrets not configured. Skipping push."
            exit 0
          fi
          
          chmod +x scripts/benchmark_to_prometheus.py scripts/prometheus_server.py
          
          python3 scripts/benchmark_to_prometheus.py "$BENCHMARK_OUTPUT_DIR" | python3 scripts/prometheus_server.py 9091 > metrics_server.log 2>&1 &
          METRICS_SERVER_PID=$!
          
          sleep 2
          
          if ! kill -0 $METRICS_SERVER_PID 2>/dev/null; then
            echo "Metrics server failed to start"
            cat metrics_server.log
            exit 1
          fi
          
          if ! curl -s http://127.0.0.1:9091/metrics | head -n 3; then
            echo "Metrics endpoint not responding"
            exit 1
          fi
          
          cat > alloy-config.alloy << 'EOF'
          prometheus.scrape "benchmark_scraper" {
            targets = [{
              __address__ = "127.0.0.1:9091",
              job         = "android_benchmarks",
            }]
            
            scrape_interval = "5s"
            scrape_timeout  = "4s"
            
            forward_to = [prometheus.remote_write.grafana_cloud.receiver]
          }
          
          prometheus.remote_write "grafana_cloud" {
            endpoint {
              url = env("GRAFANA_URL")
              
              basic_auth {
                username = env("GRAFANA_USER")
                password = env("GRAFANA_TOKEN")
              }
              
              queue_config {
                capacity = 10000
                max_shards = 1
                max_samples_per_send = 5000
                batch_send_deadline = "5s"
              }
            }
          }
          EOF
          
          alloy run alloy-config.alloy > alloy.log 2>&1 &
          ALLOY_PID=$!
          
          sleep 20
          
          if ! kill -0 $ALLOY_PID 2>/dev/null; then
            echo "Alloy stopped unexpectedly:"
            cat alloy.log
            exit 1
          fi
          
          echo "Alloy log output:"
          tail -n 30 alloy.log
          
          kill $ALLOY_PID $METRICS_SERVER_PID 2>/dev/null || true

      - name: Upload benchmark artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ github.run_number }}
          path: |
            benchmark/build/outputs/connected_android_test_additional_output/
            alloy.log
            metrics_server.log
